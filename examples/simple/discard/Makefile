#GNU Make project makefile autogenerated by Premake

ifndef config config = debug endif

    ifndef verbose SILENT = @endif

                                .PHONY : clean prebuild prelink

                                             ifeq($(config), debug) RESCOMP =
        windres TARGETDIR =../../../ builddir TARGET =
                               $(TARGETDIR) / simple_chargen.exe OBJDIR =
                                   ../../../ builddir / obj / Debug /
                                   simple_chargen DEFINES +=
    -DDEBUG - DMINGW_HAS_SECURE_API - D_POSIX_C_SOURCE INCLUDES +=
    -I../../..- I../../../ include -
    I../../../../ chromium_base / src FORCE_INCLUDE += ALL_CPPFLAGS +=
    $(CPPFLAGS) - MMD - MP $(DEFINES) $(INCLUDES) ALL_CFLAGS +=
    $(CFLAGS) $(ALL_CPPFLAGS) - g ALL_CXXFLAGS +=
    $(CXXFLAGS) $(ALL_CPPFLAGS) - g ALL_RESFLAGS +=
    $(RESFLAGS) $(DEFINES) $(INCLUDES)
        LIBS +=../../../ builddir / nev.lib - lchromium_base - lws2_32 -
               lwinmm LDDEPS +=../../../ builddir / nev.lib ALL_LDFLAGS +=
    $(LDFLAGS) - L../../../ builddir - L../../../../ chromium_base / builddir -
    Wall - static - static - libgcc - static - libstdc++ LINKCMD =
        $(CXX) - o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
                     define PREBUILDCMDS endef define PRELINKCMDS endef define
                         POSTBUILDCMDS endef all : prebuild prelink $(TARGET)
                                                       @ :

    endif

        ifeq($(config), release) RESCOMP =
            windres TARGETDIR =../../../ builddir TARGET =
                                   $(TARGETDIR) / simple_chargen.exe OBJDIR =
                                   ../../../ builddir / obj /
                                   Release / simple_chargen DEFINES +=
    -DNDEBUG - DMINGW_HAS_SECURE_API - D_POSIX_C_SOURCE INCLUDES +=
    -I../../..- I../../../ include -
    I../../../../ chromium_base / src FORCE_INCLUDE += ALL_CPPFLAGS +=
    $(CPPFLAGS) - MMD - MP $(DEFINES) $(INCLUDES) ALL_CFLAGS +=
    $(CFLAGS) $(ALL_CPPFLAGS) - O2 ALL_CXXFLAGS +=
    $(CXXFLAGS) $(ALL_CPPFLAGS) - O2 ALL_RESFLAGS +=
    $(RESFLAGS) $(DEFINES) $(INCLUDES)
        LIBS +=../../../ builddir / nev.lib - lchromium_base - lws2_32 -
               lwinmm LDDEPS +=../../../ builddir / nev.lib ALL_LDFLAGS +=
    $(LDFLAGS) - L../../../ builddir - L../../../../ chromium_base / builddir -
    s - Wall - static - static - libgcc - static - libstdc++ LINKCMD =
        $(CXX) - o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
                     define PREBUILDCMDS endef define PRELINKCMDS endef define
                         POSTBUILDCMDS endef all : prebuild prelink $(TARGET)
                                                       @ :

    endif

        OBJECTS : = $(OBJDIR) / discard_server.o $(OBJDIR) /
                    main.o

                        RESOURCES : =

                                        CUSTOMFILES : =

                                                          SHELLTYPE
    : = posix ifeq(.exe, $(findstring.exe, $(ComSpec))) SHELLTYPE
    : = msdos endif

            $(TARGET)
    : $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) |
      $(TARGETDIR) @echo Linking simple_chargen $(SILENT) $(LINKCMD)
          $(POSTBUILDCMDS)

              $(CUSTOMFILES)
    : |
      $(OBJDIR)

              $(TARGETDIR)
    : @echo Creating $(TARGETDIR) ifeq(posix, $(SHELLTYPE)) $(SILENT) mkdir -
      p $(TARGETDIR) else $(SILENT) mkdir $(subst /,\\, $(TARGETDIR)) endif

          $(OBJDIR)
    : @echo Creating $(OBJDIR) ifeq(posix, $(SHELLTYPE)) $(SILENT) mkdir -
      p $(OBJDIR) else $(SILENT) mkdir $(subst /,\\, $(OBJDIR)) endif

          clean
    : @echo Cleaning simple_chargen ifeq(posix, $(SHELLTYPE)) $(SILENT) rm -
      f $(TARGET) $(SILENT) rm -
      rf $(OBJDIR) else $(SILENT) if exist $(subst /,\\, $(TARGET))
              del $(subst /,\\, $(TARGET))
                  $(SILENT) if exist $(subst /,\\, $(OBJDIR)) rmdir /
          s /
          q $(subst /,\\, $(OBJDIR)) endif

              prebuild : $(PREBUILDCMDS)

                             prelink : $(PRELINKCMDS)

                                           ifneq(, $(PCH)) $(OBJECTS)
    : $(GCH) $(PCH) |
      $(OBJDIR) $(GCH)
    : $(PCH) |
      $(OBJDIR) @echo $(notdir $ <) $(SILENT) $(CXX) - x c++ -
          header $(ALL_CXXFLAGS) - o "$@" - MF "$(@:%.gch=%.d)" -
          c "$<" else $(OBJECTS)
    : |
      $(OBJDIR) endif

                  $(OBJDIR) /
              discard_server.o : discard_server.cc @echo $(notdir $ <) $(SILENT)
                                     $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -
          o "$@" - MF "$(@:%.o=%.d)" -
          c "$<" $(OBJDIR) / main.o : main.cc @echo $(notdir $ <) $(SILENT)
                                          $(CXX) $(ALL_CXXFLAGS)
                                              $(FORCE_INCLUDE) -
          o "$@" - MF "$(@:%.o=%.d)" - c "$<"

          - include $(OBJECTS
                      : %.o = %.d) ifneq(, $(PCH)) -
          include $(OBJDIR) / $(notdir $(PCH))
                                   .d endif